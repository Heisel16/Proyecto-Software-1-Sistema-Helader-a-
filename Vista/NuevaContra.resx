<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>